[gd_scene load_steps=5 format=3 uid="uid://m3dh7itmfcjn"]

[ext_resource type="Texture2D" uid="uid://cu6gtw4s5yi8j" path="res://Map_Icons/unit_models.png" id="1_o5ktf"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_p8b6t"]
texture = ExtResource("1_o5ktf")
margins = Vector2i(0, 64)
separation = Vector2i(0, 64)
texture_region_size = Vector2i(128, 128)
0:4/0 = 0
0:3/0 = 0
0:0/0 = 0
0:1/0 = 0
0:2/0 = 0

[sub_resource type="TileSet" id="TileSet_dty3b"]
tile_size = Vector2i(128, 128)
sources/0 = SubResource("TileSetAtlasSource_p8b6t")

[sub_resource type="GDScript" id="GDScript_72reg"]
script/source = "class_name unit_locations extends TileMapLayer

var unit_info: Dictionary[Vector2i, base_unit] = {}

var cw: int = 0
const depth_one_side: int = 15

func erase_unit(tile: Vector2i) -> void:
	erase_cell(tile)

func set_unit(tile: Vector2i) -> void:
	set_cell(tile, 0, Vector2i(0, 1))

func is_valid(tile: Vector2i) -> bool:
	return get_cell_atlas_coords(tile) == Vector2i(0, 0)

func set_cw(p_cw: int) -> void:
	cw = p_cw

# Defenders are -y, top
func deploy_def(unit: base_unit) -> void:
	@warning_ignore(\"integer_division\")
	var base_tile: Vector2i = Vector2i(-cw / 2, -depth_one_side)
	var tile: Vector2i = base_tile
	while unit_info.has(tile):
		tile.x += 1
		@warning_ignore(\"integer_division\")
		if tile.x == cw / 2: # if reach end of path then move down and to the left
			tile.x *= -1
			tile.y += 1
			if tile.y == 0:
				return # Cannot deploy past middle
		
	unit_info[tile] = unit
	set_cell(tile, 0, unit.get_atlas_coord())

# Attackers are +y, bottom
func deploy_atk(unit: base_unit) -> void:
	@warning_ignore(\"integer_division\")
	var base_tile: Vector2i = Vector2i(-cw / 2, depth_one_side)
	var tile: Vector2i = base_tile
	while unit_info.has(tile):
		tile.x += 1
		@warning_ignore(\"integer_division\")
		if tile.x == cw / 2: # if reach end of path then move up and to the left
			tile.x *= -1
			tile.y -= 1
			if tile.y == 0:
				return # Cannot deploy past middle
		
	unit_info[tile] = unit
	set_cell(tile, 0, unit.get_atlas_coord())
"

[node name="unit_locations" type="TileMapLayer"]
tile_set = SubResource("TileSet_dty3b")
script = SubResource("GDScript_72reg")
