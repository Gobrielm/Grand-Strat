// #include "road_depot_wo_methods.hpp"

// void RoadDepotWOMethods::_bind_methods() {

// }

// RoadDepotWOMethods::RoadDepotWOMethods(): StationWOMethods() {}
// RoadDepotWOMethods::RoadDepotWOMethods(Vector2i new_location, int player_owner): StationWOMethods(new_location, player_owner) {}

// void RoadDepotWOMethods::initialize(Vector2i new_location, int player_owner) {
//     StationWOMethods::initialize(new_location, player_owner);
// }

// void RoadDepotWOMethods::distribute_cargo() {
//     for (const auto &[type, __]: storage) {
//         distribute_type(type);
//     }
		
// }
// void RoadDepotWOMethods::distribute_type(int type) {
//     for (const auto &[tile, dist]: supplied_tiles) {
// 		var broker_obj: broker = terminal_map.get_instance().get_broker(tile)
// 		if broker_obj != null and broker_obj.does_accept(type):
// 			#Only sends stuff inside country
// 			if tile_ownership.get_instance().is_owned(player_owner, broker_obj.get_location()):
// 				distribute_type_to_broker(type, broker_obj)
//     }
// }

// void RoadDepotWOMethods::distribute_type_to_broker(int type, Broker* broker) {

// }

// void RoadDepotWOMethods::add_connected_broker(Broker* new_broker) override;
// void RoadDepotWOMethods::remove_connected_broker(const Broker* new_broker) override;

// void RoadDepotWOMethods::day_tick();